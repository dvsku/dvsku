<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:dvsku.Wpf.Controls"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    
    <ControlTemplate x:Key="LabeledComboBoxLeftTemplate" TargetType="{x:Type controls:LabeledComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="LabelSize"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="PART_Label" 
                    Grid.Column="0" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="0" 
                    Background="Transparent" 
                    Padding="0,0,5,0" 
                    SnapsToDevicePixels="true">
                <ContentPresenter x:Name="labelContent" 
                                  Content="{TemplateBinding LabelContent}"
                                  ContentTemplate="{TemplateBinding LabelContentTemplate}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>

            <Popup x:Name="PART_Popup" 
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                   Margin="1" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=PART_ToggleButton}">
                <themes:SystemDropShadowChrome x:Name="shadow" 
                                               Color="Transparent" 
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                               MinWidth="{Binding ActualWidth, ElementName=PART_ToggleButton}">
                    <Border x:Name="dropDownBorder" 
                            BorderBrush="{DynamicResource LabeledComboBox.Popup.Static.Border}" 
                            BorderThickness="1" 
                            Background="{DynamicResource LabeledComboBox.Popup.Static.Background}">
                        <ScrollViewer>
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </themes:SystemDropShadowChrome>
            </Popup>

            <ToggleButton x:Name="PART_ToggleButton" 
                          IsTabStop="True"
                          Focusable="True"
                          TabIndex="1"
                          Height="{TemplateBinding ComboBoxHeight}"
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}" 
                          Grid.ColumnSpan="2" 
                          Grid.Column="1" 
                          Padding="{TemplateBinding Padding}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Background" Value="{DynamicResource LabeledComboBox.Static.Background}" />
                        <Setter Property="Template" Value="{DynamicResource LabeledComboBoxToggleButton}" />
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <ContentPresenter Grid.Column="1" 
                              Grid.ColumnSpan="2" 
                              Margin="5,0,5,0"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Content" SourceName="labelContent" Value="">
                <Setter Property="Padding" TargetName="PART_Label" Value="0"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>